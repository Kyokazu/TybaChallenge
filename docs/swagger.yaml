openapi: 3.0.0
info:
  title: Tyba Challenge API
  version: 1.0.0
  description: API para el proyecto técnico de Tyba. Incluye autenticación de usuarios, consulta de logs y búsqueda de restaurantes.

servers:
  - url: http://localhost:3000/api

paths:
  /users/signup:
    post:
      summary: Registro de un nuevo usuario
      tags: [Usuarios]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password]
              properties:
                name:
                  type: string
                  example: Juan
                email:
                  type: string
                  example: juan@gmail.com
                password:
                  type: string
                  example: 123456
      responses:
        '201':
          description: Usuario creado exitosamente
        '400':
          description: Datos inválidos

  /users/login:
    post:
      summary: Autenticación de usuario
      tags: [Usuarios]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  example: juan@gmail.com
                password:
                  type: string
                  example: 123456
      responses:
        '200':
          description: Login exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsIn...
        '401':
          description: Credenciales inválidas

  /users/logout:
    get:
      summary: Logout del usuario
      tags: [Usuarios]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Token invalidado exitosamente
        '403':
          description: Token inválido

  /users/logs:
    get:
      summary: Consulta del historial de acciones del usuario
      tags: [Usuarios]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de logs de acciones del usuario
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    action:
                      type: string
                      example: getRestaurants
                    timestamp:
                      type: string
                      format: date-time
        '403':
          description: Token inválido

  /restaurants/getRestaurants:
    post:
      summary: Consulta de restaurantes cercanos (por ciudad o coordenadas)
      tags: [Restaurantes]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    location:
                      type: string
                      example: Bogotá
                - type: object
                  properties:
                    location:
                      type: object
                      properties:
                        lat:
                          type: number
                          example: 4.711
                        lng:
                          type: number
                          example: -74.0721
      responses:
        '200':
          description: Lista de restaurantes encontrados
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Restaurante Ejemplo
                    address:
                      type: string
                      example: Calle 123, Bogotá
        '401':
          description: Token no proporcionado
        '403':
          description: Token inválido

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
